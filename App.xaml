<Application x:Class="MusicApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!-- Menu -->
            <!--#region -->
            <Style x:Key="menuTitle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="0,0,0,2"/>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                        <Setter Property="FontSize" Value="17"/>
                    </DataTrigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Tag" Value="Collapsed"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="25">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="35 0 0 0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 0 23 0"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Visibility" Value="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
            </Style>
            <!--#endregion-->

            <!-- Slider -->
            <!--#region -->
            <Style x:Key="StatusBar" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border  BorderThickness="1" BorderBrush="Black" Background="Black" Height="4"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StatusBarDone" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border SnapsToDevicePixels="True" Background="white"  BorderThickness="1" BorderBrush="gray" Height="3"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <!--Add name to ellipse to use in  controltemplate triggers-->
                            <Ellipse x:Name="Ellipse" Height="10" Width="10" Fill="White"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="Slider"  TargetType="{x:Type Slider}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Track Grid.Row="1" x:Name="PART_Track"   >
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource StatusBarDone}"  Command="Slider.DecreaseLarge" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource SliderThumb}"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource StatusBar}" Command="Slider.IncreaseLarge" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                </Grid>
            </ControlTemplate>

            <Style x:Key="Horizontal_Slider" TargetType="{x:Type Slider}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="MinHeight" Value="20" />
                        <Setter Property="MinWidth" Value="50" />
                        <Setter Property="MaxWidth" Value="1000" />
                        <Setter Property="Template" Value="{StaticResource Slider}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="sliderButton" TargetType="Button">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush"  Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="sliderButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Visibility" Value="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
            </Style>

            <!--#endregion-->

            <!-- Buttons -->
            <!--#region -->
            <Storyboard x:Key="GradientAnimation" RepeatBehavior="Forever" AutoReverse="True">
                <DoubleAnimation Storyboard.TargetProperty="GradientStops[0].Offset" From="-3.0" To="-1.0" Duration="0:0:2" />
                <DoubleAnimation Storyboard.TargetProperty="GradientStops[1].Offset" From="-1.0" To="2.0" Duration="0:0:6" />
                <DoubleAnimation Storyboard.TargetProperty="GradientStops[2].Offset" From="2.0" To="4.0" Duration="0:0:3" />
            </Storyboard>

            <Style x:Key="MyButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                        BorderThickness="1"
                        Padding="4,2"
                        BorderBrush="black"
                        CornerRadius="20"
                        Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PlaylistItemIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Foreground" Value="Black"/>
                <!-- Цвет по умолчанию -->
                <Style.Triggers>
                    <!-- Изменение цвета иконки при наведении мыши на кнопку -->
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <!--#endregion-->

            <!-- ListBox -->
            <!--#region -->

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="itemBorder"
                                CornerRadius="0, 30, 30, 0"
                                Background="Transparent"
                                Padding="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!-- Название трека -->
                                    <TextBlock Text="{TemplateBinding Content}"
                                           VerticalAlignment="Center"
                                           Foreground="White"
                                           FontSize="16"
                                           Margin="0, 0"/>
                                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <!-- Кнопка запуска -->
                                        <Button Style="{StaticResource MyButtonStyle}"
                                            Width="40" Height="40"
                                            Margin="10,0,0,0"
                                            Command="{Binding DataContext.PlayCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                            CommandParameter="{Binding}"
                                            Background="Transparent"
                                            BorderBrush="Transparent">
                                            <Icon:PackIconMaterial
                                            Kind="StarOutline"
                                            Style="{StaticResource PlaylistItemIcon}"/>
                                        </Button>
                                        <Button Style="{StaticResource MyButtonStyle}"
                                            Width="40" Height="40"
                                            Margin="10,0,0,0"
                                            Command="{Binding DataContext.PlayCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                            CommandParameter="{Binding}"
                                            Background="Transparent"
                                            BorderBrush="Transparent">
                                            <Icon:PackIconMaterial
                                            Kind="PlayCircle"
                                            Style="{StaticResource PlaylistItemIcon}"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Триггер для запуска анимации при наведении -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!-- Анимация плавного изменения цвета -->
                                                <ColorAnimation Storyboard.TargetName="itemBorder"
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    From="Black" To="#FF252525" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!-- Анимация возврата к прозрачному -->
                                                <ColorAnimation Storyboard.TargetName="itemBorder"
                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    To="Black" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
                <!-- Прозрачный фон по умолчанию -->
                <Setter Property="Margin" Value="2"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>


            <!--#endregion-->
            
        </ResourceDictionary>
    </Application.Resources>

</Application>
